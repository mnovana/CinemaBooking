// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeatReservationService.Models;

#nullable disable

namespace SeatReservationService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SeatReservationService.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ShowtimeId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ShowtimeId = 1,
                            UserEmail = "novana@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            ShowtimeId = 2,
                            UserEmail = "novana@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            ShowtimeId = 3,
                            UserEmail = "novana@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            ShowtimeId = 4,
                            UserEmail = "novana@gmail.com"
                        });
                });

            modelBuilder.Entity("SeatReservationService.Models.ReservedSeat", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "SeatId");

                    b.ToTable("ReservedSeats");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            SeatId = 1
                        },
                        new
                        {
                            ReservationId = 1,
                            SeatId = 2
                        },
                        new
                        {
                            ReservationId = 2,
                            SeatId = 1
                        },
                        new
                        {
                            ReservationId = 2,
                            SeatId = 2
                        },
                        new
                        {
                            ReservationId = 3,
                            SeatId = 14
                        },
                        new
                        {
                            ReservationId = 3,
                            SeatId = 15
                        },
                        new
                        {
                            ReservationId = 4,
                            SeatId = 14
                        });
                });

            modelBuilder.Entity("SeatReservationService.Models.ReservedSeat", b =>
                {
                    b.HasOne("SeatReservationService.Models.Reservation", "Reservation")
                        .WithMany("ReservedSeats")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("SeatReservationService.Models.Reservation", b =>
                {
                    b.Navigation("ReservedSeats");
                });
#pragma warning restore 612, 618
        }
    }
}
