// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScreeningService.Models;

#nullable disable

namespace ScreeningService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241025033937_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScreeningService.Models.Row", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("ScreeningRoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScreeningRoomId");

                    b.HasIndex("Number", "ScreeningRoomId")
                        .IsUnique();

                    b.ToTable("Rows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1,
                            ScreeningRoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 2,
                            ScreeningRoomId = 1
                        },
                        new
                        {
                            Id = 3,
                            Number = 3,
                            ScreeningRoomId = 1
                        },
                        new
                        {
                            Id = 4,
                            Number = 1,
                            ScreeningRoomId = 2
                        },
                        new
                        {
                            Id = 5,
                            Number = 2,
                            ScreeningRoomId = 2
                        },
                        new
                        {
                            Id = 6,
                            Number = 3,
                            ScreeningRoomId = 2
                        });
                });

            modelBuilder.Entity("ScreeningService.Models.ScreeningRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("ScreeningRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 2
                        });
                });

            modelBuilder.Entity("ScreeningService.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("RowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RowId");

                    b.HasIndex("Number", "RowId")
                        .IsUnique();

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1,
                            RowId = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 2,
                            RowId = 1
                        },
                        new
                        {
                            Id = 3,
                            Number = 3,
                            RowId = 1
                        },
                        new
                        {
                            Id = 4,
                            Number = 4,
                            RowId = 1
                        },
                        new
                        {
                            Id = 5,
                            Number = 1,
                            RowId = 2
                        },
                        new
                        {
                            Id = 6,
                            Number = 2,
                            RowId = 2
                        },
                        new
                        {
                            Id = 7,
                            Number = 3,
                            RowId = 2
                        },
                        new
                        {
                            Id = 8,
                            Number = 4,
                            RowId = 2
                        },
                        new
                        {
                            Id = 9,
                            Number = 1,
                            RowId = 3
                        },
                        new
                        {
                            Id = 10,
                            Number = 2,
                            RowId = 3
                        },
                        new
                        {
                            Id = 11,
                            Number = 3,
                            RowId = 3
                        },
                        new
                        {
                            Id = 12,
                            Number = 4,
                            RowId = 3
                        },
                        new
                        {
                            Id = 13,
                            Number = 1,
                            RowId = 4
                        },
                        new
                        {
                            Id = 14,
                            Number = 2,
                            RowId = 4
                        },
                        new
                        {
                            Id = 15,
                            Number = 3,
                            RowId = 4
                        },
                        new
                        {
                            Id = 16,
                            Number = 4,
                            RowId = 4
                        },
                        new
                        {
                            Id = 17,
                            Number = 1,
                            RowId = 5
                        },
                        new
                        {
                            Id = 18,
                            Number = 2,
                            RowId = 5
                        },
                        new
                        {
                            Id = 19,
                            Number = 3,
                            RowId = 5
                        },
                        new
                        {
                            Id = 20,
                            Number = 4,
                            RowId = 5
                        },
                        new
                        {
                            Id = 21,
                            Number = 1,
                            RowId = 6
                        },
                        new
                        {
                            Id = 22,
                            Number = 2,
                            RowId = 6
                        },
                        new
                        {
                            Id = 23,
                            Number = 3,
                            RowId = 6
                        },
                        new
                        {
                            Id = 24,
                            Number = 4,
                            RowId = 6
                        });
                });

            modelBuilder.Entity("ScreeningService.Models.Showtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("End")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ScreeningRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScreeningRoomId");

                    b.ToTable("Showtimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(2024, 10, 10, 19, 33, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 1,
                            ScreeningRoomId = 1,
                            Start = new DateTime(2024, 10, 10, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            End = new DateTime(2024, 10, 11, 0, 3, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 1,
                            ScreeningRoomId = 1,
                            Start = new DateTime(2024, 10, 10, 21, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            End = new DateTime(2024, 10, 10, 18, 51, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 2,
                            ScreeningRoomId = 2,
                            Start = new DateTime(2024, 10, 10, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            End = new DateTime(2024, 10, 10, 23, 21, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 2,
                            ScreeningRoomId = 2,
                            Start = new DateTime(2024, 10, 10, 21, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            End = new DateTime(2024, 10, 10, 18, 53, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 3,
                            ScreeningRoomId = 1,
                            Start = new DateTime(2024, 10, 11, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            End = new DateTime(2024, 10, 10, 18, 53, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 3,
                            ScreeningRoomId = 2,
                            Start = new DateTime(2024, 10, 11, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ScreeningService.Models.Row", b =>
                {
                    b.HasOne("ScreeningService.Models.ScreeningRoom", "ScreeningRoom")
                        .WithMany()
                        .HasForeignKey("ScreeningRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScreeningRoom");
                });

            modelBuilder.Entity("ScreeningService.Models.Seat", b =>
                {
                    b.HasOne("ScreeningService.Models.Row", "Row")
                        .WithMany()
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ScreeningService.Models.Showtime", b =>
                {
                    b.HasOne("ScreeningService.Models.ScreeningRoom", "ScreeningRoom")
                        .WithMany()
                        .HasForeignKey("ScreeningRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScreeningRoom");
                });
#pragma warning restore 612, 618
        }
    }
}
