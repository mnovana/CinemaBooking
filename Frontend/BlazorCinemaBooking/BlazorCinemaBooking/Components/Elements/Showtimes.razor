@namespace BlazorCinemaBooking.Components.Elements
@inject AuthenticationStateProvider AuthStateProvider
@inject ISeatReservationService SeatReservationService
@inject IToastService ToastService

@if (moviesWithShowtimes != null)
{
    <div class="w-full">
        @foreach (var movie in moviesWithShowtimes)
        {
            <div class="flex gap-5">
                
                <div class="w-1/3 text-center">
                    <img src=@($"images/movie{movie.Key}.jpg") class="w-2/5 inline-block" />
                </div>
                
                <div class="w-2/3 flex flex-col justify-between">
                    <h2 class="text-3xl font-bold text-zinc-800">@movie.Value[0].MovieTitle</h2>

                    @foreach(var showtime in movie.Value)
                    {
                        <div class="m-2 p-2 rounded border flex justify-between">
                            <div>
                                @showtime.Start.ToString("HH:mm")
                            </div>
                            <button @onclick="async() => await ReserveClickAsync(showtime.Id)"
                                    class="px-3 bg-zinc-700 hover:bg-zinc-800 text-white rounded-xl">
                                RESERVE
                            </button>
                        </div>
                    }

                    <button class="w-2/5 py-3 text-white font-bold bg-gradient-to-r from-blue-900 via-fuchsia-700 to-pink-700 hover:opacity-80 rounded">More details</button>
                </div>
            </div>
            <br /><hr /><br />
        }
    </div>
}

@code {
    [Parameter]
    public List<ShowtimeDTO> showtimes { get; set; }
    [Parameter]
    public bool isLoggedIn { get; set; }
    private Dictionary<int, ShowtimeDTO[]>? moviesWithShowtimes;

    protected override void OnParametersSet()
    {
        moviesWithShowtimes = showtimes
            .GroupBy(s => s.MovieId)
            .ToDictionary(group => group.Key, group => group.ToArray());
    }

    private async Task ReserveClickAsync(int showtimeId)
    {
        if(!isLoggedIn)
        {
            ToastService.ShowError("You are not logged in.");
            Console.WriteLine("Toasttttttttttttt");
        }
        else
        {
            try
            {
                var authState = await AuthStateProvider.GetAuthenticationStateAsync();
                var email = authState.User.FindFirst("email")?.Value;

                await SeatReservationService.AddReservationAsync(showtimeId, email, new[] { 8, 9 });

                ToastService.ShowSuccess("Successful reservation.");
            }
            catch (Exception ex)
            {
                ToastService.ShowError(ex.Message);
            }
        }
    }
}
