@namespace BlazorCinemaBooking.Components.Forms
@using System.ComponentModel.DataAnnotations
@using BlazorCinemaBooking.Models
@inject IUserService UserService
@inject NavigationManager NavigationManager

<div class="bg-white w-1/3 h-1/2 rounded shadow-md flex flex-col items-center">
  <h1 class="text-3xl py-3">Login</h1>

    <EditForm Enhanced="true" Model="model" FormName="login" OnValidSubmit="SubmitAsync" class="flex-1 w-4/5">
      <DataAnnotationsValidator />
      <div class="flex flex-col justify-around items-center h-full">
            <InputText @bind-Value="model.Username" placeholder="Username" class="w-full border p-2" />
            <ValidationMessage For="() => model.Username" />

            <InputText @bind-Value="model.Password" type="password" placeholder="Password" class="w-full border p-2" />
            <ValidationMessage For="() => model.Password" />
            <span class="text-red-500">@errorMsg</span>

            <button type="submit" class="w-3/4 h-8 text-white font-bold bg-gradient-to-r from-blue-900 via-fuchsia-700 to-pink-700 hover:opacity-80 rounded">LOGIN</button>
      </div>
  </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private Login model { get; set; } = new Login();
    string errorMsg = "";

    public async Task SubmitAsync()
    {
        try
        {
            await UserService.LoginAsync(model);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMsg = ex.Message;
        }
    }
}
